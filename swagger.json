{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"TYPE_USER": {
				"properties": {
					"updated": {
						"type": "string",
						"format": "date-time",
						"description": "Last user update"
					},
					"workSpace": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"description": "Workspace that user could be explore"
					},
					"active": {
						"type": "boolean",
						"description": "Is the user active?"
					},
					"lastName": {
						"type": "string",
						"description": "User last name"
					},
					"firstName": {
						"type": "string",
						"description": "user first name"
					},
					"password": {
						"type": "string",
						"description": "Password encrypted"
					},
					"userId": {
						"type": "string",
						"description": "Business User Id"
					},
					"email": {
						"type": "string",
						"description": "User email"
					},
					"_id": {
						"type": "string",
						"description": "Mongo Document Id"
					}
				},
				"required": [
					"workSpace",
					"active",
					"lastName",
					"firstName",
					"password",
					"userId",
					"email"
				],
				"type": "object"
			},
			"UserBody": {
				"description": "User interface used just for create a user",
				"properties": {
					"username": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"first_name": {
						"type": "string"
					},
					"last_name": {
						"type": "string"
					}
				},
				"required": [
					"username",
					"password",
					"email",
					"first_name",
					"last_name"
				],
				"type": "object",
				"additionalProperties": true
			},
			"Login": {
				"properties": {
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"email",
					"password"
				],
				"type": "object",
				"additionalProperties": true
			},
			"TYPE_SOLUTION": {
				"properties": {
					"toJSON": {
						"description": "lodash methods"
					},
					"reactions": {
						"properties": {
							"confused": {
								"type": "number",
								"format": "double"
							},
							"likes": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"confused",
							"likes"
						],
						"type": "object",
						"description": "Reactions in park"
					},
					"calification": {
						"properties": {
							"impact": {
								"type": "number",
								"format": "double"
							},
							"complexity": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"impact",
							"complexity"
						],
						"type": "object",
						"description": "Calification summary (baremo average)"
					},
					"fileName": {
						"type": "string",
						"description": "Filename submited by generator"
					},
					"baremoReferrer": {
						"type": "string",
						"description": "Refer to baremo did it by referrer"
					},
					"baremoValidator": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"description": "Refers to baremos did it by validators"
					},
					"timeInPark": {
						"type": "number",
						"format": "double",
						"description": "TimePeriod that challenge is in a Park for discussion"
					},
					"status": {
						"type": "string",
						"description": "Solution status @TODO do the solution status"
					},
					"isPrivate": {
						"type": "boolean",
						"description": "Solution is shared with the community?"
					},
					"active": {
						"type": "boolean",
						"description": "Flag that indicate if a solution is active.\nWhen a challenge is delete, the flag is false"
					},
					"canChooseScope": {
						"type": "boolean",
						"description": "If true, solution's generator can choose if the \nsolution is shared with the community"
					},
					"images": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"description": "Solution images"
					},
					"description": {
						"type": "string",
						"description": "Solution description"
					},
					"updated": {
						"type": "string",
						"format": "date-time",
						"description": "Solution update date"
					},
					"created": {
						"type": "string",
						"format": "date-time",
						"description": "Solution creation date"
					},
					"authorEmail": {
						"type": "string",
						"description": "Generator that create the solution"
					},
					"challengeId": {
						"type": "string",
						"description": "Id that identify the challenge associated. If undefinedn then solution\nwas an initiative of a generator"
					},
					"solutionId": {
						"type": "string",
						"description": "Id that uniquely identifies a solution"
					}
				},
				"required": [
					"fileName",
					"timeInPark",
					"status",
					"isPrivate",
					"active",
					"canChooseScope",
					"images",
					"description",
					"created",
					"authorEmail",
					"solutionId"
				],
				"type": "object"
			},
			"SolutionBody": {
				"properties": {
					"challenge_id": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"images": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"can_choose_scope": {
						"type": "boolean"
					},
					"is_private": {
						"type": "boolean"
					},
					"status": {
						"type": "string"
					},
					"time_in_park": {
						"type": "number",
						"format": "double"
					},
					"baremo_validator": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"baremo_referrer": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": true
			},
			"TYPE_CHALLENGE": {
				"properties": {
					"workSpaceAvailable": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"description": "Workspace is a concept that allows to manage resources access for users.\nIf a user and resources are in a same work space, then could be returned"
					},
					"referrer": {
						"type": "string",
						"description": "Users who have the responsibility of managing an organization department.\nCould be committe member or not.  Referrer work with validators because generally a challenge impact\nis relationated with a organization area."
					},
					"validators": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"description": "Committe Users who have the responsibility of managing the destination of the challenge"
					},
					"status": {
						"type": "string",
						"description": "Challenge Status: @TODO define status challenge"
					},
					"timePeriod": {
						"type": "number",
						"format": "double",
						"description": "TimePeriod that challenge is in a Park for discussion. Dimenention is in hours. \nThen a challenge will be in a park Challenge create + timePeriod"
					},
					"images": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"description": "Challenge Images URL"
					},
					"active": {
						"type": "boolean",
						"description": "Flag that indicate if a challenge is active.\nWhen a challenge is delete, the flag is false"
					},
					"description": {
						"type": "string",
						"description": "Challenge description"
					},
					"updated": {
						"type": "string",
						"format": "date-time",
						"description": "Challenge Update date"
					},
					"created": {
						"type": "string",
						"format": "date-time",
						"description": "Challenge creation date"
					},
					"isStrategic": {
						"type": "boolean",
						"description": "If challenge response to strategic organization need."
					},
					"department": {
						"type": "string",
						"description": "Area that challenge is relationated @TODO add departments as CONSTANTS"
					},
					"challengeId": {
						"type": "string",
						"description": "Id that uniquely identifies a challenge"
					},
					"author": {
						"type": "string",
						"description": "Author's Challenge"
					}
				},
				"required": [
					"workSpaceAvailable",
					"referrer",
					"validators",
					"status",
					"timePeriod",
					"images",
					"active",
					"description",
					"created",
					"isStrategic",
					"department",
					"challengeId",
					"author"
				],
				"type": "object",
				"description": "Challenge entity is a proposal that need a solution"
			},
			"ChallengeBody": {
				"properties": {
					"challengeId": {
						"type": "string"
					},
					"created": {
						"type": "string",
						"format": "date-time"
					},
					"updated": {
						"type": "string",
						"format": "date-time"
					},
					"time_period": {
						"type": "number",
						"format": "double"
					},
					"description": {
						"type": "string"
					},
					"active": {
						"type": "boolean"
					},
					"images": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"timePeriod": {
						"type": "number",
						"format": "double"
					},
					"status": {
						"type": "string"
					},
					"work_space_available": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"validators": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"referrer": {
						"type": "string"
					},
					"workSpaceAvailable": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"challengeId",
					"created",
					"description",
					"active",
					"images",
					"timePeriod",
					"status",
					"validators",
					"referrer",
					"workSpaceAvailable"
				],
				"type": "object",
				"additionalProperties": true
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "ideation_backend",
		"version": "1.0.0",
		"description": "ideation backend",
		"license": {
			"name": "ISC"
		},
		"contact": {
			"name": "Clara Idea"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/user/signup": {
			"post": {
				"operationId": "SignUp",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TYPE_USER"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserBody"
							}
						}
					}
				}
			}
		},
		"/user/login": {
			"post": {
				"operationId": "Login",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Login"
							}
						}
					}
				}
			}
		},
		"/user/{userId}": {
			"delete": {
				"operationId": "Delete",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/solution": {
			"post": {
				"operationId": "NewSolution",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TYPE_SOLUTION"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SolutionBody"
							}
						}
					}
				}
			}
		},
		"/solution/{solutionId}": {
			"patch": {
				"operationId": "UpdateSolutionPartially",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TYPE_SOLUTION"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "solutionId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SolutionBody"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteSolution",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "solutionId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"get": {
				"operationId": "GetSolution",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TYPE_SOLUTION"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "solutionId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/challenge": {
			"post": {
				"operationId": "NewChallenge",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TYPE_CHALLENGE"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ChallengeBody"
							}
						}
					}
				}
			}
		},
		"/challenge/{challengeId}/solution": {
			"post": {
				"operationId": "NewSolution",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TYPE_SOLUTION"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "challengeId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ChallengeBody"
							}
						}
					}
				}
			}
		},
		"/challenge/{challengeId}": {
			"get": {
				"operationId": "GetChallenge",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TYPE_CHALLENGE"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "challengeId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"patch": {
				"operationId": "UpdateChallengePartially",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TYPE_CHALLENGE"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "challengeId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ChallengeBody"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteChallenge",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "challengeId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}